

TELOXIDE_TOKEN=7796948770:AAHCSHndhePfHjKSKID3sncPHz12wmuI4D4
use teloxide::prelude::*;
use teloxide::types::{InlineKeyboardButton, InlineKeyboardMarkup, MessageKind, UpdateKind};
use std::collections::HashMap;
use std::sync::{Arc, Mutex};

#[tokio::main]
async fn main() {
    let bot = Bot::from_env();
    teloxide::repl(bot.clone(), move |message| {
        let bot = bot.clone();
        async move {
            let text = message.update.text().unwrap_or("");

            match text {
                "/start" => {
                    let keyboard = InlineKeyboardMarkup::new(vec![
                        vec![
                            InlineKeyboardButton::callback("üíé –ì–µ–º—ã", "buy_gems"),
                            InlineKeyboardButton::callback("ü™ô –†–æ–±—É–∫—Å—ã", "buy_robux"),
                        ],
                    ]);
                    bot.send_message(message.chat.id, "–ü—Ä–∏–≤–µ—Ç! –ß—Ç–æ —Ö–æ—á–µ—à—å –∫—É–ø–∏—Ç—å?")
                        .reply_markup(keyboard)
                        .await?;
                }
                _ => {
                    bot.send_message(message.chat.id, "–Ø –ø–æ–∫–∞ –Ω–µ –ø–æ–Ω—è–ª —Ç–µ–±—è. –ò—Å–ø–æ–ª—å–∑—É–π /start.")
                        .await?;
                }
            }
            respond(())
        }
    })
    .await;
}
